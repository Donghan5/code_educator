version: '3.8'

services:
  ollama:
    image: ollama/ollama:latest
    container_name: code_educator_ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - code_educator_network
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 2m
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: code_educator_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/srcs:/app/srcs
      - ./test:/app/test
    depends_on:
      - ollama
    environment:
      - OLLAMA_API_BASE=http://ollama:11434
      - DEV_MODE=docker
      - PYTHONPATH=/app/build
      - PYTHONUNBUFFERED=1
    networks:
      - code_educator_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    command: python3 -m uvicorn srcs.python.server:app --host 0.0.0.0 --port 8000 --reload

  nginx:
    image: nginx:alpine
    container_name: code_educator_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - code_educator_network
    restart: unless-stopped

  model_downloader:
    image: ollama/ollama:latest
    container_name: code_educator_model_downloader
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=http://ollama:11434
    networks:
      - code_educator_network
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "echo 'Waiting for Ollama to be ready...' && \
      sleep 10 && \
      echo 'Downloading CodeLlama model...' && \
      ollama pull codellama && \
      echo 'Model download complete!'"
    restart: "no"

networks:
  code_educator_network:
    driver: bridge

volumes:
  ollama_data:
    driver: local